{% extends 'knp_menu.html.twig' %}

{% block linkElement %}
    <a href="{{ item.uri }}"{{ knp_menu.attributes(item.linkAttributes) }}>
        {% if item.childrenAttributes.icon is defined %}
            <i class="fa fa-{{ item.childrenAttributes.icon }}"></i>
        {% endif %}
        <span class="menu-title">{{ block('label') }}</span>
    </a>
{% endblock %}

{% block item %}
    {% if item.displayed %}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

        {% if item.hasChildren and options.depth is not sameas(0) %}
            {% if options.branch_class is not empty and item.displayChildren %}
                {%- set classes = classes|merge([options.branch_class]) %}
            {% endif %}
        {% elseif options.leaf_class is not empty %}
            {%- set classes = classes|merge([options.leaf_class]) %}
        {%- endif %}

        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}

        {% import 'knp_menu.html.twig' as knp_menu %}
        {% if item.linkAttributes.type is defined and item.linkAttributes.type == 'header' %}
            <li class="list-divider"></li>
            <li class="list-header">{{ block('label') }}</li>
            {{ block('children') }}
        {% else %}
            <li{{ knp_menu.attributes(attributes) }}>
                {%- if (item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink)) or item.hasChildren %}
                    {{ block('linkElement') }}
                {%- else %}
                    {{ block('spanElement') }}
                {%- endif %}

                {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
                {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
                {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
                {{ block('list') }}
            </li>
        {% endif %}
    {% endif %}
{% endblock %}